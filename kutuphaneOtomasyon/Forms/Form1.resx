<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="button1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAABl0RVh0U29m
        dHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAAAQNSURBVHhe7ZtdS1RRFIb9Cf6ATKkMEusiSDAUvyVR
        TKOiIMuiqBtTJAop+gANDUorM9FIMC0DsSQhStLESOwDzIgaLL3wKgm9EMIb2e112FvOrNbMnDmz9/Ho
        nBceGEfR9T7MWecjivHixYsXL168WE5zxYlYzjCHBePHpeNOs8ApF2PqCy8XsjyAhnOKBTGmvsiCE2Oj
        bPqnzxX8+jC6IkGMqS9SADXIauK4ADd9AgDHBNSXla4c58GQAzmNGFNfzuzcxKxIoIZzAjGmvpzasZGZ
        SU+MN8Dvj+VucIzxwkT2+XAK+15TFp0CJCBBjKkvuKibBMAnQYypL7iomwQAYkx9wUU9AZ4AT0BIAfh7
        qjH/LTGmvuA/7gnwBHg7ILoEHEn2Lxp1Akq3xbP9SfGsfLt9Afhnw4X6nRIxpr6AAMlBLiItmgUAuzYn
        sNQtCexkGEOaf84O1O+UiDH1hRIA7OOvj5r2AzWcE4gx9SWQAPn1AbEfqOGcQIypL+byABYg6U6LYyM5
        9JA6EWPqCy4aSMC91DiDvow49s5BEWJMfcFFQwkA2nfHsYFMemDViDH1BRe1IkDSyQ+LwSx6cCv0n05m
        7Q1prKG7gF19sdeP2t4idud+Nryu4sSKcdUHFw1HgKQnPbz9AMWp0sGobM9trGjNUS8CF7UjAGjlhwXs
        B6qwZLQwnrU0ZZAFg1HztJDx8sACJ1OMria4qF0BEtgPL4nDAsrffJhHFgzGlf5idrYtVwqQqPtnc1w0
        UgES2A9D2dbKt45UsZk/X/2A9+B7Fx4X4PISNZ8EXFSVAAnshza+6HBpM299TxgOvHf5eTFVXAKHQ+Q7
        ARdVLaDpUBJZ2kwgAdUd+VRxMx2ihv3goqoF1DUbp7KgUAIGJ7uowhQJooq94KIqBdwu2UoWxlACet7c
        pcpSNIoq9oKLqhRw43wKWRiDBczPz7NHr25RZSlmRBV7wUVVCsAff9jsUBYDW19meXmZTU1NsaHxAUMC
        5lrXMUqC/cMAF1UpoPZBvp8Ac9FAmZubYz6fLyAghhBg/5SIi6oUYC5vRcDS0hJZ2sy6FjA7O0uWNrOm
        BIRzCCwuLpKFMWtKAF6CPR+vGxIwC39/s+npab+in768N8piGnurKQHuXIJWT4N9Yy1+5QHY+ERRCvee
        Bq1cCMH1ftfrxkgEuPdCCAh1KXyuc49RNgIB7r0UBoLdDF3sLTJKRCDA/TdDQH0dfTss7/ZsClB2Ozxs
        LqpDQHNWwn+nRNNjLmOzT36bWCkPrwNsezPKHojEclYk6BAAmCXAY67K9jyqlFX0/08SHeHlYznPgjzm
        CoX6h6KrEV6ihDMjSllFz2Px1QwvBCI6OIFkDHOqOOureKBAUU5k53UvUZ2YmH+E9Loi5p/oHAAAAABJ
        RU5ErkJggg==
</value>
  </data>
</root>